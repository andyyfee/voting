/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Voting, VotingInterface } from "../../contracts/Voting";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "CandidateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "CandidateRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_winner",
        type: "address",
      },
    ],
    name: "Finished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_startedAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_endsAt",
        type: "uint256",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_candidate",
        type: "address",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_seniority",
        type: "uint256",
      },
    ],
    name: "addCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "candidates",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "seniority",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closure",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCandidates",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_candidate",
        type: "address",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526005805460ff1916905534801561001a57600080fd5b5061002433610029565b610079565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d96806100886000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063f2aa5c431161005b578063f2aa5c43146101cd578063f2fde38b146101e0578063fc528c1c146101f357600080fd5b80638da5cb5b1461018d57806395805dad146101b2578063dfbf53ae146101c557600080fd5b80636dd7d8ea116100b25780636dd7d8ea14610129578063715018a61461013c5780638ab66a901461014457600080fd5b806306a49fce146100d95780635c975abb146100f75780636dd091f914610114575b600080fd5b6100e161020a565b6040516100ee9190610c2f565b60405180910390f35b6005546101049060ff1681565b60405190151581526020016100ee565b610127610122366004610c98565b61026c565b005b610127610137366004610c98565b610464565b6101276105c8565b610172610152366004610c98565b600260208190526000918252604090912080546001820154919092015483565b604080519384526020840192909252908201526060016100ee565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100ee565b6101276101c0366004610cba565b61062e565b61019a6106d4565b6101276101db366004610cd3565b610775565b6101276101ee366004610c98565b610997565b6101fc60045481565b6040519081526020016100ee565b6060600380548060200260200160405190810160405280929190818152602001828054801561026257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610244575b5050505050905090565b6000546001600160a01b031633146102cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166000908152600260205260409020546103305760405162461bcd60e51b815260206004820152601b60248201527f566f74696e673a2063616e646964617465206e6f7420666f756e64000000000060448201526064016102c2565b6001600160a01b0381166000908152600260205260409020546003805461035990600190610d13565b8154811061036957610369610d2a565b600091825260209091200154600380546001600160a01b03909216918390811061039557610395610d2a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060038054806103d4576103d4610d40565b600082815260208082206000199084018101805473ffffffffffffffffffffffffffffffffffffffff191690559092019092556001600160a01b03841680835260028083526040808520858155600181018690559091019390935591519182527fa9c38d4e36441185df66deccc5454d2ac0fab4f049d916441884300f6b7c605c91015b60405180910390a15050565b60045442106104db5760405162461bcd60e51b815260206004820152603260248201527f566f74696e673a20766f74696e6720616c72656164792066696e69736865642060448201527f6f72206e6f74207965742073746172746564000000000000000000000000000060648201526084016102c2565b3360008181526001602052604090205460ff161561053b5760405162461bcd60e51b815260206004820152601e60248201527f566f74696e673a20757365722068617320616c726561647920766f746564000060448201526064016102c2565b6001600160a01b03821660009081526002602052604081206001908101805491929091610569908490610d56565b909155505033600081815260016020818152604092839020805460ff191690921790915581519283526001600160a01b038516908301527fce0c7a2a940807f7dc2ce7a615c2532e915e6c0ac9a08bc4ed9d515a710a53e29101610458565b6000546001600160a01b031633146106225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c2565b61062c6000610a79565b565b6000546001600160a01b031633146106885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c2565b6106928142610d56565b60048190556040805142815260208101929092527f87ac41d581680567c1ef44614ddfa5522f853ea15b877693a35b1e4157cc309d910160405180910390a150565b600060045442116107275760405162461bcd60e51b815260206004820152601f60248201527f566f74696e673a20766f74696e67206e6f74207965742066696e69736865640060448201526064016102c2565b6000610731610ad6565b6040516001600160a01b03821681529091507fe6782ef5425ff7b9fdd779270f985cd651ea84df7bcf21f9ed6d9f29dceeb1c99060200160405180910390a1919050565b6000546001600160a01b031633146107cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c2565b6001600160a01b0382166108255760405162461bcd60e51b815260206004820152601960248201527f566f74696e673a2061646472657373206e6f742076616c69640000000000000060448201526064016102c2565b6001600160a01b03821660009081526002602052604090205415801561086557506001600160a01b03821660009081526002602081905260409091200154155b6108b15760405162461bcd60e51b815260206004820152601f60248201527f566f74696e673a2063616e64696461746520616c72656164792065786973740060448201526064016102c2565b600380546001808201835560008381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387161790559154909161091891610d13565b60408051606081018252828152600060208083018281528385018881526001600160a01b038a16808552600280855294879020955186559151600186015551939092019290925591519182529192507faa38be308bdffe126c2b6be720070355eb22e0efc549ac39221b1ce71642ed40910160405180910390a1505050565b6000546001600160a01b031633146109f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c2565b6001600160a01b038116610a6d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102c2565b610a7681610a79565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600090506000806003805480602002602001604051908101604052809291908181526020018280548015610b3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b18575b5050505050905060005b8151811015610c26576000828281518110610b5d57610b5d610d2a565b602002602001015190508460026000836001600160a01b03166001600160a01b03168152602001908152602001600020600101541115610bbd576001600160a01b0381166000908152600260205260409020600101549450925082610c13565b6001600160a01b038116600090815260026020526040902060010154851415610c13576001600160a01b038085166000908152600260208190526040808320820154938516835290912001541115610c13578093505b5080610c1e81610d6e565b915050610b40565b50909392505050565b6020808252825182820181905260009190848201906040850190845b81811015610c705783516001600160a01b031683529284019291840191600101610c4b565b50909695505050505050565b80356001600160a01b0381168114610c9357600080fd5b919050565b600060208284031215610caa57600080fd5b610cb382610c7c565b9392505050565b600060208284031215610ccc57600080fd5b5035919050565b60008060408385031215610ce657600080fd5b610cef83610c7c565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d2557610d25610cfd565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60008219821115610d6957610d69610cfd565b500190565b6000600019821415610d8257610d82610cfd565b506001019056fea164736f6c6343000809000a";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Voting> {
    return super.deploy(overrides || {}) as Promise<Voting>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Voting {
    return super.attach(address) as Voting;
  }
  override connect(signer: Signer): Voting__factory {
    return super.connect(signer) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new utils.Interface(_abi) as VotingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Voting {
    return new Contract(address, _abi, signerOrProvider) as Voting;
  }
}
